//This project is licensed under the terms of the Creative Commons CC BY-NC-ND 4.0 license.

//Contains the coefficients of fourth order derivative, dissipation and divergence cleaning operators

//------------------------------------------------------------------------------
// Derivative and Dissipation Operators
//------------------------------------------------------------------------------

#define ORDER 4
#define NUM_BOUNDS 4
#define STENCIL_WIDTH 7
#define STENCIL_WIDTH_HOD 3

/*
Coefficients of the first derivative operator.

For each row, the central coefficient corresponds to the nodes at which the
derivative is computed.
*/
REAL constant SBP_diff[2*NUM_BOUNDS+1][STENCIL_WIDTH] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, -24.0/17.0, 59.0/34.0, -4.0/17.0, -3.0/34.0},
  {0.0, 0.0, -1.0/2.0, 0.0, 1.0/2.0, 0.0, 0.0},
  {0.0, 4.0/43.0, -59.0/86.0, 0.0, 59.0/86.0, -4.0/43.0, 0.0},
  {3.0/98.0, 0.0, -59.0/98.0, 0.0, 32.0/49.0, -4.0/49.0, 0.0},
  // central coefficients
  {0.0, 1.0/12.0, -2.0/3.0, 0.0, 2.0/3.0, -1.0/12.0, 0.0},
  // right boundary coefficients
  {0.0, 4.0/49.0, -32.0/49.0, 0.0, 59.0/98.0, 0.0, -3.0/98.0},
  {0.0, 4.0/43.0, -59.0/86.0, 0.0, 59.0/86.0, -4.0/43.0, 0.0},
  {0.0, 0.0, -1.0/2.0, 0.0, 1.0/2.0, 0.0, 0.0},
  {3.0/34.0, 4.0/17.0, -59.0/34.0, 24.0/17.0, 0.0, 0.0, 0.0}
};

/*
Coefficients of the inverse mass/norm matrix.


The central coefficient corresponds to the inner nodes of the grid and is 1.
*/
REAL constant M_INV[2*NUM_BOUNDS+1] = {
  // left boundary coefficients
  48.0/17.0,
  48.0/59.0,
  48.0/43.0,
  48.0/49.0,
  // central coefficients
  1.0,
  // right boundary coefficients
  48.0/49.0,
  48.0/43.0,
  48.0/59.0,
  48.0/17.0
};


/*
Coeffcients of the high-order dissipation operator.

TODO: Explanation...
*/
REAL constant D_HO[2*NUM_BOUNDS+1][STENCIL_WIDTH_HOD] = {
  // left boundary coefficients
  { 0.0, 0.0, -1.0},
  { 0.0, 2.0, -1.0},
  {-1.0, 2.0, -1.0},
  {-1.0, 2.0, -1.0},
  // central coefficients
  {-1.0, 2.0, -1.0},
  // right boundary coefficients
  {-1.0, 2.0, -1.0},
  {-1.0, 2.0, -1.0},
  {-1.0, 2.0,  0.0},
  {-1.0, 0.0,  0.0}
};


//------------------------------------------------------------------------------
// Divergence Cleaning Operators
//------------------------------------------------------------------------------

// coefficients for the wide stencil operator using homogeneous Dirichlet boundary conditions
#define NUM_BOUNDS_LAPLACE_WS_D0 6
#define STENCIL_WIDTH_LAPLACE_WS_D0 9

REAL constant SBP_minus_laplace_WS_D0[2*NUM_BOUNDS_LAPLACE_WS_D0+1][STENCIL_WIDTH_LAPLACE_WS_D0] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 885.0/731.0, -2.0/17.0, -283.0/731.0, 2.0/43.0, 0.0},
  {0.0, 0.0, 0.0, -118.0/731.0, 84428.0/107457.0, -118.0/2193.0, -944.0/2107.0, 746.0/6321.0, -1.0/129.0},
  {0.0, 0.0, -16697.0/35819.0, -118.0/2499.0, 92188.0/107457.0, -698.0/6321.0, -64.0/147.0, 16.0/147.0, -1.0/147.0},
  {0.0, 59.0/1032.0, -59.0/147.0, -349.0/3096.0, 271403.0/303408.0, -97.0/882.0, -4.0/9.0, 1.0/9.0, -1.0/144.0},
  {0.0, 373.0/3528.0, -4.0/9.0, -97.0/882.0, 2123.0/2352.0, -1.0/9.0, -4.0/9.0, 1.0/9.0, -1.0/144.0},
  // central coefficients
  {-1.0/144.0, 1.0/9.0, -4.0/9.0, -1.0/9.0, 65.0/72.0, -1.0/9.0, -4.0/9.0, 1.0/9.0, -1.0/144.0},
  // right boundary coefficients
  {-1.0/144.0, 1.0/9.0, -4.0/9.0, -1.0/9.0, 2123.0/2352.0, -97.0/882.0, -4.0/9.0, 373.0/3528.0, 0.0},
  {-1.0/144.0, 1.0/9.0, -4.0/9.0, -97.0/882.0, 271403.0/303408.0, -349.0/3096.0, -59.0/147.0, 59.0/1032.0, 0.0},
  {-1.0/147.0, 16.0/147.0, -64.0/147.0, -698.0/6321.0, 92188.0/107457.0, -118.0/2499.0, -16697.0/35819.0, 0.0, 0.0},
  {-1.0/129.0, 746.0/6321.0, -944.0/2107.0, -118.0/2193.0, 84428.0/107457.0, -118.0/731.0, 0.0, 0.0, 0.0},
  {0.0, 2.0/43.0, -283.0/731.0, -2.0/17.0, 885.0/731.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
};

// coefficients for the narrow stencil operator using homogeneous Dirichlet boundary conditions
#define NUM_BOUNDS_LAPLACE_NS_D0 4
#define STENCIL_WIDTH_LAPLACE_NS_D0 5

REAL constant SBP_minus_laplace_NS_D0[2*NUM_BOUNDS_LAPLACE_NS_D0+1][STENCIL_WIDTH_LAPLACE_NS_D0] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 2.0, -1.0, 0.0},
  {0.0, -59.0/43.0, 110.0/43.0, -59.0/43.0, 4.0/43.0},
  {0.0, -59.0/49.0, 118.0/49.0, -64.0/49.0, 4.0/49.0},
  // central coefficients
  {1.0/12.0, -4.0/3.0, 5.0/2.0, -4.0/3.0, 1.0/12.0},
  // right boundary coefficients
  {4.0/49.0, -64.0/49.0, 118.0/49.0, -59.0/49.0, 0.0},
  {4.0/43.0, -59.0/43.0, 110.0/43.0, -59.0/43.0, 0.0},
  {0.0, -1.0, 2.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0}
};

// coefficients for the wide stencil operator using the least norm solution
#define NUM_BOUNDS_LAPLACE_WS_LN 6
#define STENCIL_WIDTH_LAPLACE_WS_LN 11

REAL constant SBP_minus_laplace_WS_LN[2*NUM_BOUNDS_LAPLACE_WS_LN+1][STENCIL_WIDTH_LAPLACE_WS_LN] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, 0.0, 0.0, 1756935.0/608923.0, 28438.0/12427.0, -17743.0/14161.0, 458.0/12427.0, 1280.0/35819.0, -6.0/833.0},
  {0.0, 0.0, 0.0, 0.0, 482.0/731.0, 885.0/731.0, -2.0/17.0, -283.0/731.0, 2.0/43.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, -17743.0/35819.0, -118.0/731.0, 84428.0/107457.0, -118.0/2193.0, -944.0/2107.0, 746.0/6321.0, -1.0/129.0, 0.0},
  {0.0, 0.0, 458.0/35819.0, -16697.0/35819.0, -118.0/2499.0, 92188.0/107457.0, -698.0/6321.0, -64.0/147.0, 16.0/147.0, -1.0/147.0, 0.0},
  {0.0, 80.0/6321.0, 59.0/1032.0, -59.0/147.0, -349.0/3096.0, 271403.0/303408.0, -97.0/882.0, -4.0/9.0, 1.0/9.0, -1.0/144.0, 0.0},
  {-1.0/392.0, 0.0, 373.0/3528.0, -4.0/9.0, -97.0/882.0, 2123.0/2352.0, -1.0/9.0, -4.0/9.0, 1.0/9.0, -1.0/144.0, 0.0},
  // central coefficients
  {0.0, -1.0/144.0, 1.0/9.0, -4.0/9.0, -1.0/9.0, 65.0/72.0, -1.0/9.0, -4.0/9.0, 1.0/9.0, -1.0/144.0, 0.0},
  // right boundary coefficients
  {0.0, -1.0/144.0, 1.0/9.0, -4.0/9.0, -1.0/9.0, 2123.0/2352.0, -97.0/882.0, -4.0/9.0, 373.0/3528.0, 0.0, -1.0/392.0},
  {0.0, -1.0/144.0, 1.0/9.0, -4.0/9.0, -97.0/882.0, 271403.0/303408.0, -349.0/3096.0, -59.0/147.0, 59.0/1032.0, 80.0/6321.0, 0.0},
  {0.0, -1.0/147.0, 16.0/147.0, -64.0/147.0, -698.0/6321.0, 92188.0/107457.0, -118.0/2499.0, -16697.0/35819.0, 458.0/35819.0,0.0, 0.0},
  {0.0, -1.0/129.0, 746.0/6321.0, -944.0/2107.0, -118.0/2193.0, 84428.0/107457.0, -118.0/731.0, -17743.0/35819.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, 2.0/43.0, -283.0/731.0, -2.0/17.0, 885.0/731.0, 482.0/731.0, 0.0, 0.0, 0.0, 0.0},
  {-6.0/833.0, 1280.0/35819.0, 458.0/12427.0, -17743.0/14161.0, 28438.0/12427.0, 1756935.0/608923.0, 0.0, 0.0, 0.0, 0.0, 0.0}
};

REAL constant SBP_diff_adjoint[2*NUM_BOUNDS+1][STENCIL_WIDTH] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, -24.0/17.0, -59.0/34.0, 4.0/17.0, 3.0/34.0},
  {0.0, 0.0, 1.0/2.0, 0.0, -1.0/2.0, 0.0, 0.0},
  {0.0, -4.0/43.0, 59.0/86.0, 0.0, -59.0/86.0, 4.0/43.0, 0.0},
  {-3.0/98.0, 0.0, 59.0/98.0, 0.0, -32.0/49.0, 4.0/49.0, 0.0},
  // central coefficients
  {0.0, -1.0/12.0, 2.0/3.0, 0.0, -2.0/3.0, 1.0/12.0, 0.0},
  // right boundary coefficients
  {0.0, -4.0/49.0, 32.0/49.0, 0.0, -59.0/98.0, 0.0, 3.0/98.0},
  {0.0, -4.0/43.0, 59.0/86.0, 0.0, -59.0/86.0, 4.0/43.0, 0.0},
  {0.0, 0.0, 1.0/2.0, 0.0, -1.0/2.0, 0.0, 0.0},
  {-3.0/34.0, -4.0/17.0, 59.0/34.0, 24.0/17.0, 0.0, 0.0, 0.0}
};
