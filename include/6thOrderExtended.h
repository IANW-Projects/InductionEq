//This project is licensed under the terms of the Creative Commons CC BY-NC-ND 3.0 license.

//------------------------------------------------------------------------------
// Derivative and Dissipation Operators
//------------------------------------------------------------------------------

#define ORDER 6
#define NUM_BOUNDS 8
#define STENCIL_WIDTH 15
#define STENCIL_WIDTH_HOD 4

/*
Coefficients of the first derivative operator.

For each row, the central coefficient corresponds to the nodes at which the
derivative is computed.
*/
REAL constant SBP_diff[2*NUM_BOUNDS+1][STENCIL_WIDTH] = {
  // left boundary coefficients
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.694029296324548, 2.2544400845574146, -0.08620936936595677, -0.6743331558049105, -0.07168333624323447, 0.38115659167302335, -0.08731913763956911, -0.022022380852219126},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4365525804636584, 0.0, 0.12187865127311552, 0.42004468901091385, 0.0470417141198997, -0.2125755994195112, 0.05032210731569905, 0.009841018163541479, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.0, 0.09741494725447933, -0.711215002547361, 0.0, 0.8403260918548099, -0.37986080371212877, 0.22013700587387647, -0.07661058352779537, 0.009808344804119466, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.11103870430595493, -0.35718853265672956, -0.12245501860532282, 0.0, 0.14863285514606336, 0.3046668200409279, -0.07709684669473892, -0.007597981536154871, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.05057247589531842, -0.17138834402848946, 0.23716432273447202, -0.6368115841111023, 0.0, 0.45802944394754846, 0.11968856778065982, -0.05725488221840702, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, -0.08825366313016443, 0.25418203725254873, -0.04510775672577946, -0.42840506197919914, -0.15032343689393768, 0.0, 0.49588737738338984, -0.05105411266688221, 0.013074616760024358, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.027868806551392657, -0.08294111904346851, 0.02163847109859378, 0.1494327114564729, -0.05414590249550342, -0.6835380274603214, 0.0, 0.7658629221663829, -0.16220009505774236, 0.018022232784193595, 0.0, 0.0, 0.0, 0.0},
  {0.006441573285017685, -0.01486516911927158, -0.0025389390555661823, 0.013496651847819854, 0.023738004203261713, 0.06449545481541777, -0.7018911953245108, 0.0, 0.743258455963579, -0.1486516911927158, 0.016516854576968422, 0.0, 0.0, 0.0, 0.0},
  // central coefficients
  {0.0, 0.0, 0.0, 0.0, -0.016666666666666666, 0.15, -0.75, 0.0, 0.75, -0.15, 0.016666666666666666, 0.0, 0.0, 0.0, 0.0},
  // right boundary coefficients
  {0.0, 0.0, 0.0, 0.0, -0.016516854576968422, 0.1486516911927158, -0.743258455963579, 0.0, 0.7018911953245108, -0.06449545481541777, -0.023738004203261713, -0.013496651847819854, 0.0025389390555661823, 0.01486516911927158, -0.006441573285017685},
  {0.0, 0.0, 0.0, 0.0, -0.018022232784193595, 0.16220009505774236, -0.7658629221663829, 0.0, 0.6835380274603214, 0.05414590249550342, -0.1494327114564729, -0.02163847109859378, 0.08294111904346851, -0.027868806551392657, 0.0},
  {0.0, 0.0, 0.0, 0.0, -0.013074616760024358, 0.05105411266688221, -0.49588737738338984, 0.0, 0.15032343689393768, 0.42840506197919914, 0.04510775672577946, -0.25418203725254873, 0.08825366313016443, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.0, 0.05725488221840702, -0.11968856778065982, -0.45802944394754846, 0.0, 0.6368115841111023, -0.23716432273447202, 0.17138834402848946, -0.05057247589531842, 0.0, 0.0, 0.0},
  {0.0, 0.0, 0.0, 0.007597981536154871, 0.07709684669473892, -0.3046668200409279, -0.14863285514606336, 0.0, 0.12245501860532282, 0.35718853265672956, -0.11103870430595493, 0.0, 0.0, 0.0, 0.0},
  {0.0, 0.0, -0.009808344804119466, 0.07661058352779537, -0.22013700587387647, 0.37986080371212877, -0.8403260918548099, 0.0, 0.711215002547361, -0.09741494725447933, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.0, -0.009841018163541479, -0.05032210731569905, 0.2125755994195112, -0.0470417141198997, -0.42004468901091385, -0.12187865127311552, 0.0, 0.4365525804636584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {0.022022380852219126, 0.08731913763956911, -0.38115659167302335, 0.07168333624323447, 0.6743331558049105, 0.08620936936595677, -2.2544400845574146, 1.694029296324548, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
};


/*
Coefficients of the inverse mass/norm matrix.


The central coefficient corresponds to the inner nodes of the grid and is 1.
*/
REAL constant M_INV[2*NUM_BOUNDS+1] = {
  // left boundary coefficients
  3.388058592649096,
  0.656067877569432,
  3.8284417520438296,
  0.5578928353172239,
  2.390269768238421,
  0.7844770056014616,
  1.0813339670516158,
  0.9910112746181052,
  // central coefficients
  1.0,
  // right boundary coefficients
  0.9910112746181052,
  1.0813339670516158,
  0.7844770056014616,
  2.390269768238421,
  0.5578928353172239,
  3.8284417520438296,
  0.656067877569432,
  3.388058592649096
};


/*
Coeffcients of the high-order dissipation operator.

TODO: Explanation...
*/
REAL constant D_HO[2*NUM_BOUNDS+1][STENCIL_WIDTH_HOD] = {
  // left boundary coefficients
  {0.0,  0.0, 3.0, -1.0},
  {0.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  // central coefficients
  {1.0, -3.0, 3.0, -1.0},
  // right boundary coefficients
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0, -1.0},
  {1.0, -3.0, 3.0,  0.0},
  {1.0, -3.0, 0.0,  0.0},
};


//------------------------------------------------------------------------------
// Divergence Cleaning Operators
//------------------------------------------------------------------------------

//TODO: Implement the operators
